name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: ["stable", "nightly"]

    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -D warnings

    steps:
      - uses: actions/checkout@v3

      - name: Install toolchain
        run: rustup toolchain install ${{ matrix.version }}

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.version }}-build

      - name: Check the project
        run: cargo check --workspace

  lint:
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -D warnings

    steps:
      - uses: actions/checkout@v3

      - name: Install toolchain
        run: rustup toolchain install nightly

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1"
          key: lint

      - name: Lint the project
        run: cargo clippy --workspace

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: ["stable", "nightly"]

    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v3

      - name: Install toolchain
        run: rustup toolchain install ${{ matrix.version }}

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.version }}-test

      - name: Test the project
        run: cargo test --workspace

  format:
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v3

      - name: Install toolchain
        run: rustup toolchain install nightly

      - name: Restore cache
        uses: Swatinem/rust-cache@v2

      - name: Format the project
        run: cargo fmt --all -- --check
